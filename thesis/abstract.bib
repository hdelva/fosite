@misc{tarpit,
  title = { Epigrams on Programming },
  howpublished = {\url{http://www-pu.informatik.uni-tuebingen.de/users/klaeren/epigrams.html}},
  note = {Accessed: 2017-02-13}
}

@misc{oracle,
  title = { Alias Improvements Branch },
  howpublished = {\url{https://gcc.gnu.org/wiki/Alias_Improvements}},
  note = {Accessed: 2017-04-12}
}

@misc{pypy,
  title = { The RPython Toolchain },
  howpublished = {\url{http://rpython.readthedocs.io/en/latest/translation.html#flow-graphs}},
  note = {Accessed: 2017-04-12}
}

@misc{memoryssallvm,
  title = { MemorySSA },
  howpublished = {\url{http://llvm.org/docs/MemorySSA.html}},
  note = {Accessed: 2017-04-12}
}

@misc{csharp,
  title = { The Marvels of Monads },
  howpublished = {\url{http://www-pu.informatik.uni-tuebingen.de/users/klaeren/epigrams.html}},
  note = {Accessed: 2017-02-13}
}

@misc{erlang,
  title = { History of Erlang },
  howpublished = {\url{https://www.erlang.org/course/history}},
  note = {Accessed: 2017-02-13}
}

@misc{go,
  title = { Golang FAQ },
  howpublished = {\url{https://golang.org/doc/faq}},
  note = {Accessed: 2017-02-13}
}

@misc{rust,
  title = { Rust FAQ },
  howpublished = {\url{https://www.rust-lang.org/en-US/faq.html}},
  note = {Accessed: 2017-02-13}
}

@inproceedings{cdev,
 author = {Ritchie, Dennis M.},
 title = {The Development of the C Language},
 booktitle = {The Second ACM SIGPLAN Conference on History of Programming Languages},
 series = {HOPL-II},
 year = {1993},
 isbn = {0-89791-570-4},
 location = {Cambridge, Massachusetts, USA},
 pages = {201--208},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/154766.155580},
 doi = {10.1145/154766.155580},
 acmid = {155580},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@misc{lattner,
  title = { What Every C Programmer Should Know About Undefined Behavior },
  howpublished = {\url{http://blog.llvm.org/2011/05/what-every-c-programmer-should-know.html}},
  note = {Accessed: 2017-02-13}
}

@inproceedings{wang,
 author = {Wang, Xi and Chen, Haogang and Cheung, Alvin and Jia, Zhihao and Zeldovich, Nickolai and Kaashoek, M. Frans},
 title = {Undefined Behavior: What Happened to My Code?},
 booktitle = {Proceedings of the Asia-Pacific Workshop on Systems},
 series = {APSYS '12},
 year = {2012},
 isbn = {978-1-4503-1669-9},
 location = {Seoul, Republic of Korea},
 pages = {9:1--9:7},
 articleno = {9},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/2349896.2349905},
 doi = {10.1145/2349896.2349905},
 acmid = {2349905},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@misc{guide,
  title = { A Guide to Undefined Behavior in C and C++ },
  howpublished = {\url{http://blog.regehr.org/archives/213}},
  note = {Accessed: 2017-02-13}
}

@misc{stroustrup,
  title = { Did you really say that? },
  howpublished = {\url{http://www.stroustrup.com/bs_faq.html#really-say-that}},
  note = {Accessed: 2017-02-13}
}

@misc{crockford,
  title = { Crockford on JavaScript - Section 8: Programming Style & Your Brain },
  howpublished = {\url{https://www.youtube.com/watch?v=taaEzHI9xyY}},
  note = {Accessed: 2017-02-13}
}

@misc{jslint,
  title = { JSLint },
  howpublished = {\url{https://github.com/douglascrockford/JSLint}},
  note = {Accessed: 2017-02-13}
}

@misc{gnu,
  title = { Infinity and NaN
 },
  howpublished = {\url{http://www.gnu.org/software/libc/manual/html_node/Infinity-and-NaN.html}},
  note = {Accessed: 2017-04-09}
}

@misc{mpi,
  title = {  Is Open MPI 'Valgrind-clean' or how can I identify real errors?
 },
  howpublished = {\url{https://www.open-mpi.org/faq/?category=debugging#valgrind_clean
}},
  note = {Accessed: 2017-04-09}
}


@misc{lippert,
  title = { Dynamic languages make for harder to maintain large codebases
 },
  howpublished = {\url{http://softwareengineering.stackexchange.com/a/221658}},
  note = {Accessed: 2017-04-08}
}

@article{coverity,
 author = {Bessey, Al and Block, Ken and Chelf, Ben and Chou, Andy and Fulton, Bryan and Hallem, Seth and Henri-Gros, Charles and Kamsky, Asya and McPeak, Scott and Engler, Dawson},
 title = {A Few Billion Lines of Code Later: Using Static Analysis to Find Bugs in the Real World},
 journal = {Commun. ACM},
 issue_date = {February 2010},
 volume = {53},
 number = {2},
 month = feb,
 year = {2010},
 issn = {0001-0782},
 pages = {66--75},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1646353.1646374},
 doi = {10.1145/1646353.1646374},
 acmid = {1646374},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@book{lutz,
 author = {Lutz, Mark},
 title = {Programming Python},
 year = {1996},
 isbn = {1-56592-197-6},
 publisher = {O'Reilly \& Associates, Inc.},
 address = {Sebastopol, CA, USA},
} 

@phdthesis{madsen,
  author = {Madsen, Magnus},
  school = {Aarhus University},
  title = {Static Analysis of Dynamic Languages},
  year = {2015}
}

@masterthesis{pecky, 
  author = {Peck, Jonathan},
  school = {Ghent University},
  title = {Robustness of Classifiers to Adversarial Perturbations},
  year = {2017}
}

@misc{C99, 
  author = {ISO/IEC},
  title = {Rationale for International Standard-- Programming Languages-- C},
  year = {2003}
}

@book{goodparts,
 author = {Crockford, Douglas},
 title = {JavaScript: The Good Parts},
 year = {2008},
 isbn = {0596517742},
 publisher = {O'Reilly Media, Inc.},
}

@book{nasa1,
 author = {H. Kreide and D. W. Lambert},
 title = {Computation: Aerospace Computers in Aircraft, Missiles, and Spacecraft},
 year = {1964},
 pages = {42 -- 77},
} 

@book{nasa2,
 author = {Carey and Sturm},
 title = {Space Software},
 pages = {63},
}

@techreport{nasa3,
     title = {Guidance, Navigation and Control},
     author = {James A. Hand},
     year = {1971},
     institution = {MIT},
     month = {10}
}

@inproceedings{haskell,
author = {, Paul Hudak and , John Hughes and Peyton Jones, Simon and , Philip Wadler},
title = {A History of Haskell: being lazy with class},
booktitle = {},
year = {2007},
month = {June},
abstract = {This long (55-page) paper describes the history of Haskell, including its genesis and principles, technical contributions, implementations and tools, and applications and impact.

You might also be interested in Simon's POPL'03 talk: A retrospective on Haskell

Watch below a video of the talk, the video starts a minute or so into the talk, but nothing important is missing.

[embed]https://www.youtube.com/watch?v=06x8Wf2r2Mc[/embed]},
publisher = {},
url = {https://www.microsoft.com/en-us/research/publication/a-history-of-haskell-being-lazy-with-class/},
address = {},
pages = {},
journal = {},
volume = {},
chapter = {},
isbn = {},
}

@article{unsound,
 author = {Livshits, Benjamin and Sridharan, Manu and Smaragdakis, Yannis and Lhot\'{a}k, Ond\v{r}ej and Amaral, J. Nelson and Chang, Bor-Yuh Evan and Guyer, Samuel Z. and Khedker, Uday P. and M{\o}ller, Anders and Vardoulakis, Dimitrios},
 title = {In Defense of Soundiness: A Manifesto},
 journal = {Commun. ACM},
 issue_date = {February 2015},
 volume = {58},
 number = {2},
 month = jan,
 year = {2015},
 issn = {0001-0782},
 pages = {44--46},
 numpages = {3},
 url = {http://doi.acm.org/10.1145/2644805},
 doi = {10.1145/2644805},
 acmid = {2644805},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@book{refactor,
 author = {Fowler, Martin},
 title = {Refactoring: improving the design of existing code
},
 year = {1999},
 isbn = {0-201-48567-2},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA },
} 

@inproceedings{equality,
  author        = "Bowen Alpern and Mark N. Wegman and F. Kenneth Zadeck",
  booktitle     = "{Conference Record of the 15th Annual Symposium on Principles of Programming Languages}",
  doi           = "10.1145/73560.73561",
  editor        = "Jeanne Ferrante and P. Mager",
  ee            = "http://doi.acm.org/10.1145/73560.73561",
  isbn          = "0-89791-252-7",
  pages         = "1--11",
  publisher     = "{ACM Press}",
  title         = "{Detecting Equality of Variables in Programs}",
  year          = 1988,
}

@article{constant,
 author = {Wegman, Mark N. and Zadeck, F. Kenneth},
 title = {Constant Propagation with Conditional Branches},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {April 1991},
 volume = {13},
 number = {2},
 month = apr,
 year = {1991},
 issn = {0164-0925},
 pages = {181--210},
 numpages = {30},
 url = {http://doi.acm.org/10.1145/103135.103136},
 doi = {10.1145/103135.103136},
 acmid = {103136},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract interpretation, code optimization, constant propagation, control flow graph, interprocedural analysis, procedure integration, static single assignment form, type determination},
} 

@TECHREPORT{equivalent,
    author = {Wuu Yang and Susan Horwitz and Thomas Reps},
    title = {Detecting Program Components With Equivalent Behaviors},
    institution = {},
    year = {1989}
}

@article{increment,
 author = {Cytron, Ron and Ferrante, Jeanne and Rosen, Barry K. and Wegman, Mark N. and Zadeck, F. Kenneth},
 title = {Efficiently Computing Static Single Assignment Form and the Control Dependence Graph},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {Oct. 1991},
 volume = {13},
 number = {4},
 month = oct,
 year = {1991},
 issn = {0164-0925},
 pages = {451--490},
 numpages = {40},
 url = {http://doi.acm.org/10.1145/115372.115320},
 doi = {10.1145/115372.115320},
 acmid = {115320},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {control dependence, control flow graph, def-use chain, dominator, optimizing compilers},
} 

@ARTICLE{dominance,
    author = {Keith D. Cooper and Timothy J. Harvey and Ken Kennedy},
    title = {A simple, fast dominance algorithm},
    journal = {Software Practice & Experience},
    year = {2001}
}

@phdthesis{lattner,
  abstract = {Abstract Modern programming languages and software engineering
               principles are causing increasing problems for compiler systems.
               Traditional approaches, which use a simple compile-link-execute
               model, are unable to provide adequate application performance
               ...},
  added-at = {2015-07-14T13:30:28.000+0200},
  author = {Lattner, Chris Arthur},
  biburl = {http://www.bibsonomy.org/bibtex/2fe6a01795d434156c888668106070fa0/christophv},
  interhash = {db8e714e9b13e69ce73c214398af5218},
  intrahash = {fe6a01795d434156c888668106070fa0},
  keywords = {Expose LLVM},
  publisher = {llvm.org},
  school = {University of Illinois at Urbana-Champaign},
  timestamp = {2016-01-04T14:22:08.000+0100},
  title = {{LLVM}: An infrastructure for multi-stage optimization},
  year = 2002
}

@article{hotspot,
 author = {Kotzmann, Thomas and Wimmer, Christian and M\"{o}ssenb\"{o}ck, Hanspeter and Rodriguez, Thomas and Russell, Kenneth and Cox, David},
 title = {Design of the Java HotSpot\&Trade; Client Compiler for Java 6},
 journal = {ACM Trans. Archit. Code Optim.},
 issue_date = {May 2008},
 volume = {5},
 number = {1},
 month = may,
 year = {2008},
 issn = {1544-3566},
 pages = {7:1--7:32},
 articleno = {7},
 numpages = {32},
 url = {http://doi.acm.org/10.1145/1369396.1370017},
 doi = {10.1145/1369396.1370017},
 acmid = {1370017},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Java, compiler, deoptimization, intermediate representation, just-in-time compilation, optimization, register allocation},
} 

@inproceedings{memoryssa,
  title={Memory SSA-a unified approach for sparsely representing memory operations},
  author={Novillo, Diego},
  booktitle={Proc of the GCC Developers’ Summit},
  year={2007},
  organization={Citeseer}
}

@INPROCEEDINGS{treessa,
    author = {Diego Novillo},
    title = {Tree SSA A New Optimization Infrastructure for GCC},
    booktitle = {in Proceedings of the 2003 GCC Developers},
    year = {2003},
    pages = {181--194}
}

@inproceedings{svf,
 author = {Sui, Yulei and Xue, Jingling},
 title = {SVF: Interprocedural Static Value-flow Analysis in LLVM},
 booktitle = {Proceedings of the 25th International Conference on Compiler Construction},
 series = {CC 2016},
 year = {2016},
 isbn = {978-1-4503-4241-4},
 location = {Barcelona, Spain},
 pages = {265--266},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/2892208.2892235},
 doi = {10.1145/2892208.2892235},
 acmid = {2892235},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Pointer Analysis, SVF, Value-Flow},
} 

@article{symb1,
 author = {Rhodes, Dustin and Disney, Tim and Flanagan, Cormac},
 title = {Dynamic Detection of Object Capability Violations Through Model Checking},
 journal = {SIGPLAN Not.},
 issue_date = {February 2015},
 volume = {50},
 number = {2},
 month = oct,
 year = {2014},
 issn = {0362-1340},
 pages = {103--112},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2775052.2661099},
 doi = {10.1145/2775052.2661099},
 acmid = {2661099},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {javascript, model checking, object capability, proxies, tool},
} 

@inproceedings{symb2,
 author = {P\u{a}s\u{a}reanu, Corina S. and Rungta, Neha},
 title = {Symbolic PathFinder: Symbolic Execution of Java Bytecode},
 booktitle = {Proceedings of the IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE '10},
 year = {2010},
 isbn = {978-1-4503-0116-9},
 location = {Antwerp, Belgium},
 pages = {179--180},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/1858996.1859035},
 doi = {10.1145/1858996.1859035},
 acmid = {1859035},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated test case generation, program analysis},
} 

@inproceedings{symb3,
 author = {Cadar, Cristian and Dunbar, Daniel and Engler, Dawson},
 title = {KLEE: Unassisted and Automatic Generation of High-coverage Tests for Complex Systems Programs},
 booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'08},
 year = {2008},
 location = {San Diego, California},
 pages = {209--224},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1855741.1855756},
 acmid = {1855756},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@inproceedings{interpret,
 author = {Gorbovitski, Michael and Liu, Yanhong A. and Stoller, Scott D. and Rothamel, Tom and Tekle, Tuncay K.},
 title = {Alias Analysis for Optimization of Dynamic Languages},
 booktitle = {Proceedings of the 6th Symposium on Dynamic Languages},
 series = {DLS '10},
 year = {2010},
 isbn = {978-1-4503-0405-4},
 location = {Reno/Tahoe, Nevada, USA},
 pages = {27--42},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/1869631.1869635},
 doi = {10.1145/1869631.1869635},
 acmid = {1869635},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {alias analysis, dynamic languages, optimization, type analysis},
} 

@article{visser,
 author = {Visser, Willem and Havelund, Klaus and Brat, Guillaume and Park, Seungjoon and Lerda, Flavio},
 title = {Model Checking Programs},
 journal = {Automated Software Engg.},
 issue_date = {April 2003},
 volume = {10},
 number = {2},
 month = apr,
 year = {2003},
 issn = {0928-8910},
 pages = {203--232},
 numpages = {30},
 url = {http://dx.doi.org/10.1023/A:1022920129859},
 doi = {10.1023/A:1022920129859},
 acmid = {641186},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Java, abstraction, model checking, runtime analysis, static analysis, symmetry},
} 

@inproceedings{jsure,
 author = {Jensen, Simon Holm and M{\o}ller, Anders and Thiemann, Peter},
 title = {Type Analysis for JavaScript},
 booktitle = {Proceedings of the 16th International Symposium on Static Analysis},
 series = {SAS '09},
 year = {2009},
 isbn = {978-3-642-03236-3},
 location = {Los Angeles, CA},
 pages = {238--255},
 numpages = {18},
 url = {http://dx.doi.org/10.1007/978-3-642-03237-0_17},
 doi = {10.1007/978-3-642-03237-0_17},
 acmid = {1615460},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{mypy,
 author = {Jukka},
 title = {Mypy Documentation},
} 

@article{netflix,
 author = {Brendan Gregg},
 title = {Node.js in Flames},
} 

@article{facebook,
 author = {Julien Verlaguet, Alok Menghrajani},
 title = {Hack: a new programming language for HHVM},
} 

@article{soundness,
 author = {Yichen Xie, Mayur Naik, Brian Hackett, Alex Aiken},
 title = {Soundness and its Role in Bug Detection Systems},
} 

@book{pmd,
  title={PMD Applied: An Easy-to-use Guide for Developers},
  author={Copeland, T.},
  isbn={9780976221418},
  lccn={2005907843},
  series={An easy-to-use guide for developers},
  url={https://books.google.be/books?id=Pj\_8AAAACAAJ},
  year={2005},
  publisher={Centennial Books}
}

@article{duploc,
 author = {Matthias Rieger, Stéphane Ducasse
Software Composition Group, University of Berne},
 title = {Visual Detection of Duplicated Code},
} 

@article{ccfinder,
 author = {Kamiya, Toshihiro and Kusumoto, Shinji and Inoue, Katsuro},
 title = {CCFinder: A Multilinguistic Token-based Code Clone Detection System for Large Scale Source Code},
 journal = {IEEE Trans. Softw. Eng.},
 issue_date = {July 2002},
 volume = {28},
 number = {7},
 month = jul,
 year = {2002},
 issn = {0098-5589},
 pages = {654--670},
 numpages = {17},
 url = {http://dx.doi.org/10.1109/TSE.2002.1019480},
 doi = {10.1109/TSE.2002.1019480},
 acmid = {636191},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {CASE tool, code clone, duplicated code, maintenance, metrics},
} 

@techreport{symbex,
author = {Ball, Tom and Daniel, Jakub},
title = {Deconstructing Dynamic Symbolic Execution},
booktitle = {The 2014 Marktober Summer School on Deop},
year = {2015},
month = {January},
abstract = {

Dynamic symbolic execution (DSE) is a well-known technique for automatically generating tests to achieve higher levels of coverage in a program. Two keys ideas of DSE are to: (1) seed symbolic execution by executing a program on an initial input; (2) using concrete values from the program execution in place of symbolic expressions whenever symbolic reasoning is hard or not desired. We describe DSE for a simple core language and then present a minimalist implementation of DSE for Python (in Python) that follows this basic recipe. The code is available at https://www.github.com/thomasjball/PyExZ3/ (tagged v1.0) and has been designed to make it easy to experiment with and extend.


},
publisher = {IOS Press},
url = {https://www.microsoft.com/en-us/research/publication/deconstructing-dynamic-symbolic-execution/},
address = {},
pages = {},
journal = {Proceedings of the 2014 Marktoberdorf Summer School on Dependable Software Systems Engineering},
volume = {},
chapter = {},
isbn = {},
}

@article{symbex2,
 author = {Alessandro Bruni, Tim Disney, Cormac Flanagan},
 title = {A Peer Architecture for Lightweight Symbolic Execution},
} 

@Inbook{z3,
author="de Moura, Leonardo
and Bj{\o}rner, Nikolaj",
editor="Ramakrishnan, C. R.
and Rehof, Jakob",
title="Z3: An Efficient SMT Solver",
bookTitle="Tools and Algorithms for the Construction and Analysis of Systems: 14th International Conference, TACAS 2008, Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2008, Budapest, Hungary, March 29-April 6, 2008. Proceedings",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="337--340",
isbn="978-3-540-78800-3",
doi="10.1007/978-3-540-78800-3_24",
url="http://dx.doi.org/10.1007/978-3-540-78800-3_24"
}

@article{z3str,
 author = {Yunhui Zheng, Vijay Ganesh, 
  Sanu Subramanian, Omer Tripp, 
  Murphy Berzish, Julian Dolby,
  Xiangyu Zhang},
 title = {Z3str2: An Efficient Solver for Strings, Regular Expressions, and Length Constraints},
} 
